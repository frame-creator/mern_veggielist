{"ast":null,"code":"var _jsxFileName = \"/Users/sun/Desktop/react/places_project/react-frontend/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Places from './places/pages/Places';\nimport UserAndUserPlaces from './places/pages/UserAndUserPlaces';\nimport UserPlaces from './places/pages/UserPlaces';\nimport NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './elements/navigation/MainNavigaton';\nimport Auth from './user/pages/Auth';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport './App.css';\nimport { AuthContext } from './elements/context/auth-context';\nimport { useAuth } from './elements/hooks/auth-hook';\n\nconst App = () => {\n  const {\n    token,\n    login,\n    logout,\n    userId\n  } = useAuth();\n  /* const [isLoggedIn, setIsLoggedIn] = useState(false);\n   const login= useCallback(\n    () => {\n      setIsLoggedIn(true)\n    },\n    [],\n  );\n   const logout = useCallback(\n    () => {\n      setIsLoggedIn(false);\n    },[]\n  );\n  */\n\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Places, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(UserAndUserPlaces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(NewPlace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/places/:placeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(UpdatePlace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Places, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(NewPlace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, routes)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sun/Desktop/react/places_project/react-frontend/src/App.js"],"names":["React","BrowserRouter","Router","Route","Redirect","Switch","Places","UserAndUserPlaces","UserPlaces","NewPlace","MainNavigation","Auth","UpdatePlace","AuthContext","useAuth","App","token","login","logout","userId","routes","isLoggedIn"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport Places from './places/pages/Places';\nimport UserAndUserPlaces from './places/pages/UserAndUserPlaces';\nimport UserPlaces from './places/pages/UserPlaces';\n\nimport NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './elements/navigation/MainNavigaton';\nimport Auth from './user/pages/Auth';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport './App.css';\nimport {AuthContext} from './elements/context/auth-context';\nimport {useAuth} from './elements/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId} = useAuth();\n  /* const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login= useCallback(\n    () => {\n      setIsLoggedIn(true)\n    },\n    [],\n  );\n\n  const logout = useCallback(\n    () => {\n      setIsLoggedIn(false);\n    },[]\n  );\n*/\n\n  let routes;\n\nif (token) {\n  routes= (\n    <Switch>\n     <Route path=\"/\" exact> \n       <Places/>\n      \n       \n       </Route>\n       <Route path=\"/:userId/places\" exact>\n            <UserAndUserPlaces/>\n            \n          </Route>\n       <Route path=\"/places/new\" exact> \n       <NewPlace/>\n       </Route>\n       <Route path=\"/places/:placeId\" > \n       <UpdatePlace/>\n       </Route>\n      <Redirect to=\"/\"/>\n      </Switch>\n  );\n} else {\n  routes= (\n    <Switch>\n     <Route path=\"/\" exact> \n       <Places/>\n      \n       \n       </Route>\n       <Route path=\"/auth\" exact>\n       <Auth/>\n          </Route>\n       <Route path=\"/places/new\" exact> \n       <NewPlace/>\n       </Route>\n       <Route path=\"/auth\"> \n       <Auth/>\n       </Route>\n       \n        \n      <Redirect to=\"/auth\"/>\n      </Switch>\n  );\n}\n\n  return (\n   <AuthContext.Provider\n   value={{\n    isLoggedIn: !!token, \n    token: token, \n    userId: userId, \n    login: login, \n    logout: logout\n  }}\n  >\n    <Router>\n      <MainNavigation/>\n      <main>{routes}</main>\n    </Router>\n  </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}